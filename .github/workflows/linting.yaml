name: Linting testing
'on':
  pull_request:
    branches:
      - develop
      - release/**
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_MESSAGE: ":memo: docs: updated documentation!"
      CI_COMMIT_AUTHOR: "mlops team"
    #  PASSWORD: ${{ secrets.GIT_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Set environment variable "commit message"
        run: |
          echo "commit-message=$(git log -1 --pretty=format:%s)" >> $GITHUB_ENV
      
      - name: Display variable "commit message"
        run: |
          echo "commit-message=${{ env.commit-message }}"

      - name: Set environment variable "commit author"
        run: |
          echo "commit-author=$(git log -1 --pretty=format:%an)" >> $GITHUB_ENV
      
      - name: Display variable "commit-author"
        run: |
          echo "commit-author=${{ env.commit-author }}"

      - name: set environment "is-auto-commit"
        if: env.commit-message == env.CI_COMMIT_MESSAGE && env.commit-author == env.CI_COMMIT_AUTHOR
        run: |
          echo "is-auto-commit=true" >> $GITHUB_ENV
      
      - name: Display variable "is-auto-commit"
        run: |
          echo "is-auto-commit=${{ env.is-auto-commit }}"

      - name: Install dependencies
        if: env.is-auto-commit == false
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Pylint
        if: env.is-auto-commit == false
        run: |
          pip install pylint
          if [ -d "src/main" ]
          then
            echo "analyzing src/main/folder"
            pylint $(git ls-files 'src/main/*.py') --rcfile=.pylint
          else
            echo "analyzing old project structure"
            pylint $(git ls-files '*.py') --rcfile=.pylint
          fi

      - name: Lint with morgan-linter
        if: env.is-auto-commit == false
        run: |
          pip install morgan-linter
          if [ -d "src/main" ]
          then
            echo "analyzing src/main/folder"
            morgan $(git ls-files 'src/main/*.py')
          else
            echo "analyzing old project structure"
            morgan $(git ls-files '*.py')
          fi